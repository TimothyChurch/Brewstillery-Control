[
  {
    "id": "7842e5d8.ba1b5c",
    "type": "tab",
    "label": "Cascade PID",
    "disabled": false,
    "info": ""
  },
  {
    "id": "5f1bd78e.a79258",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "inner_p",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 460,
    "y": 420,
    "wires": [
      []
    ]
  },
  {
    "id": "43e07dd4.c17a24",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "inner_i",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 460,
    "y": 500,
    "wires": [
      [
        "f890e9a3.d42f88"
      ]
    ]
  },
  {
    "id": "1971dc0b.fb7e94",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "inner_d",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 460,
    "y": 580,
    "wires": [
      []
    ]
  },
  {
    "id": "37d092f8.b78d2e",
    "type": "function",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID",
    "func": "// Manually specify update interval\nmsg.interval = 2000;\n\n//\n// Begin Outer Control Loop\n//\n// Output from Outer Control will be the target + Jacket delta T\n// Calculate outer error\nmsg.outer_target = flow.get('target')\nmsg.outer_error = msg.outer_target - global.get('charge.temp');\n\n// Update outer integrator\n// For purposes of integrator, bound error by [-1, 1]\nmsg.outer_integrator = flow.get('outer_integrator');\nmsg.outer_integrator += (msg.interval/1000) * Math.max(Math.min(msg.outer_error, 1), -1);\n\n// Bound total outer integrator by absolute maximum\nmsg.outer_integrator = Math.max(Math.min(msg.outer_integrator, flow.get('outer_integrator_max')), -flow.get('outer_integrator_max'));\n\n// Output updated integrator to flow context\nflow.set('outer_integrator', msg.outer_integrator);\n\n// Calculate proportional action\nmsg.outer_output = msg.outer_error * flow.get('outer_p');\n\n// Calculate intergral action\nmsg.outer_output += msg.outer_integrator * flow.get('outer_i');\n\n// Calculate derivative action\nmsg.outer_derivative = (msg.outer_error - flow.get('last_outer_error'))/(msg.interval/1000);\nmsg.outer_output += msg.outer_derivative * flow.get('outer_d');\n\n// Bound outer_output by [outer_min, outer_max]\nmsg.outer_output = Math.max(Math.min(msg.outer_output, flow.get('outer_max')), flow.get('outer_min'));\n\n// Set inner_target\nmsg.inner_target = Math.min(msg.outer_target + msg.outer_output, 90)\n\n// Output updated last_outer_error to flow context\nmsg.last_outer_error = msg.outer_error;\nflow.set('last_outer_error', msg.last_outer_error);\n\n//\n// Begin Inner Control Loop\n// Output from inner control loop will be Jacket element duty %\n// Calculate inner error\nmsg.inner_error = msg.inner_target - global.get('jacket.temp');\n\n// Update inner integrator\n// For purposes of integrator, bound error by [-1, 1]\nmsg.inner_integrator = flow.get('inner_integrator');\nmsg.inner_integrator += (msg.interval/1000) * Math.max(Math.min(msg.inner_error, 1), -1);\n\n// Bound total inner integrator by absolute maximum\nmsg.inner_integrator = Math.max(Math.min(msg.inner_integrator, flow.get('inner_integrator_max')), -flow.get('inner_integrator_max'));\n\n// Output updated integrator to flow context\nflow.set('inner_integrator', msg.inner_integrator);\n\n// Calculate proportional action\nmsg.inner_output = msg.inner_error * flow.get('inner_p');\n\n// Calculate intergral action\nmsg.inner_output += msg.inner_integrator * flow.get('inner_i');\n\n// Calculate derivative action\nmsg.inner_derivative = (msg.inner_error - flow.get('last_inner_error'))/(msg.interval/1000);\nmsg.inner_output += msg.inner_derivative * flow.get('inner_d');\n\n// Bound inner_output by [0.0, max_output]\nmsg.inner_output = Math.max(Math.min(msg.inner_output, flow.get('inner_max')), 0.0);\n\n// Output updated last_inner_error to flow context\nmsg.last_inner_error = msg.inner_error;\nflow.set('last_inner_error', msg.last_inner_error);\n\n// Set payload to element output\nmsg.payload = msg.inner_output;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "x": 290,
    "y": 160,
    "wires": [
      [
        "3c1c43fe.a90e0c",
        "a30b8419.22e588"
      ]
    ]
  },
  {
    "id": "c5043392.084e3",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Inner Kp",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": "0.1",
    "topic": "",
    "payload": "20.0",
    "payloadType": "num",
    "x": 220,
    "y": 380,
    "wires": [
      [
        "5f06c0d5.2a1a2",
        "5f1bd78e.a79258"
      ]
    ]
  },
  {
    "id": "8263d06a.a5d83",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Inner Ki",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "1",
    "payloadType": "num",
    "x": 220,
    "y": 460,
    "wires": [
      [
        "402ef598.e32b1c",
        "43e07dd4.c17a24"
      ]
    ]
  },
  {
    "id": "fd86d775.c4a758",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Inner Kd",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "30",
    "payloadType": "num",
    "x": 220,
    "y": 540,
    "wires": [
      [
        "756cbf8b.6829b",
        "1971dc0b.fb7e94"
      ]
    ]
  },
  {
    "id": "af775fa1.75578",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Target",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "0",
    "payloadType": "num",
    "x": 220,
    "y": 300,
    "wires": [
      [
        "6a6b1e7b.43d67"
      ]
    ]
  },
  {
    "id": "a15edbe7.bd95e8",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Inner Limit",
    "props": [
      {
        "p": "payload",
        "v": "30",
        "vt": "num"
      },
      {
        "p": "topic",
        "v": "",
        "vt": "string"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "30",
    "payloadType": "num",
    "x": 230,
    "y": 620,
    "wires": [
      [
        "21110fca.beca8",
        "7cf27e4e.caeb5"
      ]
    ]
  },
  {
    "id": "21110fca.beca8",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "Output limiter",
    "tooltip": "",
    "group": "3664e4b.5830a9c",
    "order": 9,
    "width": 6,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:0}}Ÿ™",
    "min": "1",
    "max": "99",
    "step": 1,
    "x": 260,
    "y": 660,
    "wires": [
      [
        "7cf27e4e.caeb5"
      ]
    ]
  },
  {
    "id": "7cf27e4e.caeb5",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "inner_limit",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 470,
    "y": 660,
    "wires": [
      [
        "95c37b63.2a4a58"
      ]
    ]
  },
  {
    "id": "3c1c43fe.a90e0c",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "PID Settings",
    "links": [
      "3f2878d3.94f4e"
    ],
    "x": 515,
    "y": 120,
    "wires": []
  },
  {
    "id": "756cbf8b.6829b",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "KùñΩ",
    "tooltip": "",
    "group": "3664e4b.5830a9c",
    "order": 8,
    "width": 4,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}",
    "min": 0,
    "max": "100",
    "step": "0.2",
    "x": 230,
    "y": 580,
    "wires": [
      [
        "1971dc0b.fb7e94"
      ]
    ]
  },
  {
    "id": "402ef598.e32b1c",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "KùóÇ",
    "tooltip": "",
    "group": "3664e4b.5830a9c",
    "order": 6,
    "width": 4,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}",
    "min": 0,
    "max": "100",
    "step": "0.2",
    "x": 230,
    "y": 500,
    "wires": [
      [
        "43e07dd4.c17a24"
      ]
    ]
  },
  {
    "id": "5f06c0d5.2a1a2",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "Kùóâ",
    "tooltip": "",
    "group": "3664e4b.5830a9c",
    "order": 4,
    "width": 4,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}",
    "min": 0,
    "max": "99",
    "step": "0.2",
    "x": 230,
    "y": 420,
    "wires": [
      [
        "5f1bd78e.a79258"
      ]
    ]
  },
  {
    "id": "24beec78.08ee84",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "outer_p",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 460,
    "y": 740,
    "wires": [
      []
    ]
  },
  {
    "id": "b07d1797.d990a8",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "outer_i",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 460,
    "y": 820,
    "wires": [
      [
        "234c3e9d.1be962"
      ]
    ]
  },
  {
    "id": "bba4285f.138fb8",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "outer_d",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 460,
    "y": 900,
    "wires": [
      []
    ]
  },
  {
    "id": "64d822de.9d597c",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Outer Kp",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "1",
    "payloadType": "num",
    "x": 230,
    "y": 700,
    "wires": [
      [
        "56b3e127.448e2",
        "24beec78.08ee84"
      ]
    ]
  },
  {
    "id": "b05a9a9.e893668",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Outer Ki",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "1",
    "payloadType": "num",
    "x": 220,
    "y": 780,
    "wires": [
      [
        "bdfe728c.1e908",
        "b07d1797.d990a8"
      ]
    ]
  },
  {
    "id": "c8f0bb4e.911ee8",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Outer Kd",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "0",
    "payloadType": "num",
    "x": 230,
    "y": 860,
    "wires": [
      [
        "7800507b.3b407",
        "bba4285f.138fb8"
      ]
    ]
  },
  {
    "id": "88446497.d9eb08",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Outer Max",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "8",
    "payloadType": "num",
    "x": 230,
    "y": 940,
    "wires": [
      [
        "c549cb0c.351f88",
        "8010199a.bb1148"
      ]
    ]
  },
  {
    "id": "c549cb0c.351f88",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "max ŒîT",
    "tooltip": "",
    "group": "321aaa6a.377d5e",
    "order": 11,
    "width": 5,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}¬∞C",
    "min": "1",
    "max": "15",
    "step": 1,
    "x": 240,
    "y": 980,
    "wires": [
      [
        "8010199a.bb1148"
      ]
    ]
  },
  {
    "id": "8010199a.bb1148",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "outer_max",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 470,
    "y": 980,
    "wires": [
      [
        "2d586938.819696"
      ]
    ]
  },
  {
    "id": "7800507b.3b407",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "KùñΩ",
    "tooltip": "",
    "group": "321aaa6a.377d5e",
    "order": 8,
    "width": 4,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}",
    "min": 0,
    "max": "100",
    "step": "0.2",
    "x": 230,
    "y": 900,
    "wires": [
      [
        "bba4285f.138fb8"
      ]
    ]
  },
  {
    "id": "bdfe728c.1e908",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "KùóÇ",
    "tooltip": "",
    "group": "321aaa6a.377d5e",
    "order": 6,
    "width": 4,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}",
    "min": 0,
    "max": "100",
    "step": "0.2",
    "x": 230,
    "y": 820,
    "wires": [
      [
        "b07d1797.d990a8"
      ]
    ]
  },
  {
    "id": "56b3e127.448e2",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "Kùóâ",
    "tooltip": "",
    "group": "321aaa6a.377d5e",
    "order": 4,
    "width": 4,
    "height": 1,
    "wrap": false,
    "passthru": false,
    "topic": "",
    "format": "{{value | number:1}}",
    "min": 0,
    "max": "99",
    "step": "0.2",
    "x": 230,
    "y": 740,
    "wires": [
      [
        "24beec78.08ee84"
      ]
    ]
  },
  {
    "id": "85dbbc7.185df4",
    "type": "link in",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID trigger",
    "links": [
      "5010ffd6.cabb28",
      "6c6b47e7.a7f548",
      "7b7e6c85.997614",
      "ddd60831.df3758"
    ],
    "x": 155,
    "y": 160,
    "wires": [
      [
        "37d092f8.b78d2e"
      ]
    ]
  },
  {
    "id": "f5451b57.619868",
    "type": "function",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID - integrator max calculation",
    "func": "// brew2 PID algorithm - integrators\n// Justin Angevaare\n// May 2018 - Nov. 2019\n\n// Calculate outer integrator max\n// Output to flow context\nif(flow.get('outer_i')>0.0){\n    flow.set('outer_integrator_max', (flow.get('outer_max')-flow.get('outer_min'))/flow.get('outer_i'))}else {\n        flow.set('outer_integrator_max', 0.0)}\n\n// Get current output max\n// Output to flow context\nif(global.get('rims_limiter')){\n    flow.set('inner_max', flow.get('inner_limit'))}else {\n        flow.set('inner_max', 100)}\n\n// Calculate inner integrator max\n// Output to flow context\nif(flow.get('inner_i')>0.0){\n    flow.set('inner_integrator_max', flow.get('inner_max')/flow.get('inner_i'))}else {\n        flow.set('inner_integrator_max', 0.0)}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "x": 360,
    "y": 60,
    "wires": [
      []
    ]
  },
  {
    "id": "dc338642.7a7d38",
    "type": "link in",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID Integrator update",
    "links": [
      "b097c6ec.5fbe5",
      "f890e9a3.d42f88",
      "d75d11e.f8f757",
      "95c37b63.2a4a58",
      "2f03decd.c6137a",
      "234c3e9d.1be962",
      "668f2b46.52004c",
      "2d586938.819696",
      "60f7dfe2.9a8ba",
      "9bd31a5b.f45448",
      "792bfb94.ceffa4"
    ],
    "x": 155,
    "y": 60,
    "wires": [
      [
        "f5451b57.619868"
      ]
    ]
  },
  {
    "id": "f890e9a3.d42f88",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID Integrator update",
    "links": [
      "dc338642.7a7d38"
    ],
    "x": 615,
    "y": 500,
    "wires": []
  },
  {
    "id": "95c37b63.2a4a58",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID Integrator update",
    "links": [
      "dc338642.7a7d38"
    ],
    "x": 615,
    "y": 660,
    "wires": []
  },
  {
    "id": "234c3e9d.1be962",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID Integrator update",
    "links": [
      "dc338642.7a7d38"
    ],
    "x": 615,
    "y": 820,
    "wires": []
  },
  {
    "id": "2d586938.819696",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID Integrator update",
    "links": [
      "dc338642.7a7d38"
    ],
    "x": 615,
    "y": 980,
    "wires": []
  },
  {
    "id": "3e259a61.256ff6",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Mash target slider output",
    "links": [
      "6ce6448.f7e59bc"
    ],
    "x": 555,
    "y": 300,
    "wires": []
  },
  {
    "id": "b74a4d48.b825",
    "type": "inject",
    "z": "7842e5d8.ba1b5c",
    "name": "Default Outer Max",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "-2",
    "payloadType": "num",
    "x": 230,
    "y": 1020,
    "wires": [
      [
        "74398bfb.37f704",
        "c7363c08.c3fff"
      ]
    ]
  },
  {
    "id": "74398bfb.37f704",
    "type": "ui_numeric",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "label": "min ŒîT",
    "tooltip": "",
    "group": "321aaa6a.377d5e",
    "order": 9,
    "width": 5,
    "height": 1,
    "wrap": false,
    "passthru": true,
    "topic": "",
    "format": "{{value | number:1}}¬∞C",
    "min": "-10",
    "max": "0",
    "step": 1,
    "x": 240,
    "y": 1060,
    "wires": [
      [
        "c7363c08.c3fff"
      ]
    ]
  },
  {
    "id": "c7363c08.c3fff",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "outer_min",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 470,
    "y": 1060,
    "wires": [
      [
        "792bfb94.ceffa4"
      ]
    ]
  },
  {
    "id": "792bfb94.ceffa4",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Cascade PID Integrator update",
    "links": [
      "dc338642.7a7d38"
    ],
    "x": 615,
    "y": 1060,
    "wires": []
  },
  {
    "id": "2dfabc2b.bdee04",
    "type": "link out",
    "z": "7842e5d8.ba1b5c",
    "name": "Element",
    "links": [
      "a820b9b9.ef31d8",
      "675c3a5f.49e194",
      "1f7f3754.389f59"
    ],
    "x": 655,
    "y": 180,
    "wires": []
  },
  {
    "id": "a30b8419.22e588",
    "type": "switch",
    "z": "7842e5d8.ba1b5c",
    "name": "Control type",
    "property": "control",
    "propertyType": "global",
    "rules": [
      {
        "t": "eq",
        "v": "PID",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 510,
    "y": 180,
    "wires": [
      [
        "2dfabc2b.bdee04"
      ]
    ]
  },
  {
    "id": "6a6b1e7b.43d67",
    "type": "change",
    "z": "7842e5d8.ba1b5c",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "target",
        "pt": "flow",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 420,
    "y": 300,
    "wires": [
      [
        "3e259a61.256ff6"
      ]
    ]
  }
]